@import (reference) "./variable.less";

@loadingPrefix: amd-loading;

.@{loadingPrefix} {
  &-spin {
    &-container {
      display: inline-block;
    }

    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    padding: @v-spacing-large;

    &-icon {
      background-position: center;
      background-repeat: no-repeat;

      &-small {
        width: @loading-icon-size-small;
        height: @loading-icon-size-small;
      }

      &-medium {
        width: @loading-icon-size-medium;
        height: @loading-icon-size-medium;
      }

      &-large {
        width: @loading-icon-size-large;
        height: @loading-icon-size-large;
      }

      &-x-large {
        width: @loading-icon-size-x-large;
        height: @loading-icon-size-x-large;
      }

      // hack, 如果自定义指示器是空，则不显示
      &-indicator:empty {
        display: none;
      }

      // 默认隐藏默认指示器
      &+& {
        display: none;
      }

      // hack, 如果自定义指示器为空，则显示默认指示器
      &-indicator:empty+& {
        display: initial;
      }

      &-light {
        opacity: 0.6;
      }
    }
  }

  &-mini {
    display: flex;
    justify-content: center;
    align-items: center;
    width: @size-1;
    height: @size-1;
    min-width: 66 * @rpx;
    min-height: 66 * @rpx;

    &-item {
      flex: 0 0 8 * @rpx;
      min-width: 6 * @rpx;
      min-height: 6 * @rpx;
      max-width: 8 * @rpx;
      max-height: 8 * @rpx;
      overflow: hidden;
      margin-right: @h-spacing-standard;
      font-size: 0;
      border-radius: @corner-radius-sm / 2;
      background-color: @color-text-subtitle;
      animation: amd-loading-animation 1s 0s infinite linear;

      &__1 {
        animation-delay: 0s;
      }

      &__2 {
        animation-delay: 150ms;
      }

      &__3 {
        margin-right: 0;
        animation-delay: 300ms;
      }
    }
  }
}

@keyframes amd-loading-animation {
  0% {
    transform: translate3d(0, 0, 0);
  }

  12% {
    transform: translate3d(0, -150%, 0);
  }

  40% {
    transform: translate3d(0, 110%, 0);
  }

  55% {
    transform: translate3d(0, -10%, 0);
  }

  60% {
    transform: translate3d(0, 0, 0);
  }

  100% {
    transform: translate3d(0, 0, 0);
  }
}
