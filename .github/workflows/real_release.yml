name: Release By PR Comment

on:
  issue_comment:

# Example output: in a PR branch (head) named `feature-1 to a target branch (base) of `release-v1`, you'll see:
  # github.base_ref: release-v1
  # github.head_ref: feature-1
  # github.ref: refs/pull/2/merge

jobs:
  if_release_comment:
    if: "${{ github.event.issue.pull_request && startsWith(github.event.pull_request.title, 'chore(release): v') && startsWith(github.event.comment.body, '/release') }}"
    runs-on: ubuntu-latest
    steps:
      - name: "Check if user has write access"
        uses: "lannonbr/repo-permission-check-action@2.0.0"
        with:
          permission: "write"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.base_ref }}

      - name: Setup Version & Tag
        run: |
          DIST_VERSION=$(node -e "console.log(require('./package.json').version)")
          echo "DIST_VERSION=${DIST_VERSION}" >> $GITHUB_ENV
          echo "DIST_TAG=fakeLatest" >> $GITHUB_ENV
          # 在 checkTag 中使用这个环境变量
          echo "TAG=${DIST_VERSION}" >> $GITHUB_ENV
          echo $PR_CONTENT >> ./releaselog.md
        env:
          PR_CONTENT: ${{ github.event.pull_request.body }}

      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/

      - uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git Identity
        if: steps.checkTag.outputs.exists == 'false'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 安装依赖并构建
      - name: Install dependencies & Build
        run: |
          npm i

      - name: Publish version
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
          node ./scripts/publishWithNoPrompt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release
        id: create_release
        if: steps.checkTag.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.DIST_VERSION }}
          release_name: v${{ env.DIST_VERSION }}
          body_path: ./releaselog.md
          draft: true
          prerelease: true

      - uses: actions/github-script@v6
        if: success()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const script = require('./scripts/github/notifyReleaseResult.js')
            return await script('Release', {github, context, core})
